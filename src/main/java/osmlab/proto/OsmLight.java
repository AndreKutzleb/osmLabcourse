package osmlab.proto;
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmLight.proto

public final class OsmLight {
  private OsmLight() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SimpleNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SimpleNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     */
    long getId();

    /**
     * <code>required uint32 latBase = 12;</code>
     */
    boolean hasLatBase();
    /**
     * <code>required uint32 latBase = 12;</code>
     */
    int getLatBase();

    /**
     * <code>required uint32 lonBase = 13;</code>
     */
    boolean hasLonBase();
    /**
     * <code>required uint32 lonBase = 13;</code>
     */
    int getLonBase();

    /**
     * <code>required uint32 latRel = 10;</code>
     */
    boolean hasLatRel();
    /**
     * <code>required uint32 latRel = 10;</code>
     */
    int getLatRel();

    /**
     * <code>required uint32 lonRel = 11;</code>
     */
    boolean hasLonRel();
    /**
     * <code>required uint32 lonRel = 11;</code>
     */
    int getLonRel();
  }
  /**
   * Protobuf type {@code SimpleNode}
   */
  public static final class SimpleNode extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SimpleNode)
      SimpleNodeOrBuilder {
    // Use SimpleNode.newBuilder() to construct.
    private SimpleNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SimpleNode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SimpleNode defaultInstance;
    public static SimpleNode getDefaultInstance() {
      return defaultInstance;
    }

    public SimpleNode getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000008;
              latRel_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000010;
              lonRel_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000002;
              latBase_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000004;
              lonBase_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OsmLight.internal_static_SimpleNode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OsmLight.internal_static_SimpleNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OsmLight.SimpleNode.class, OsmLight.SimpleNode.Builder.class);
    }

    public static com.google.protobuf.Parser<SimpleNode> PARSER =
        new com.google.protobuf.AbstractParser<SimpleNode>() {
      public SimpleNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleNode(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleNode> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int LATBASE_FIELD_NUMBER = 12;
    private int latBase_;
    /**
     * <code>required uint32 latBase = 12;</code>
     */
    public boolean hasLatBase() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 latBase = 12;</code>
     */
    public int getLatBase() {
      return latBase_;
    }

    public static final int LONBASE_FIELD_NUMBER = 13;
    private int lonBase_;
    /**
     * <code>required uint32 lonBase = 13;</code>
     */
    public boolean hasLonBase() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 lonBase = 13;</code>
     */
    public int getLonBase() {
      return lonBase_;
    }

    public static final int LATREL_FIELD_NUMBER = 10;
    private int latRel_;
    /**
     * <code>required uint32 latRel = 10;</code>
     */
    public boolean hasLatRel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 latRel = 10;</code>
     */
    public int getLatRel() {
      return latRel_;
    }

    public static final int LONREL_FIELD_NUMBER = 11;
    private int lonRel_;
    /**
     * <code>required uint32 lonRel = 11;</code>
     */
    public boolean hasLonRel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 lonRel = 11;</code>
     */
    public int getLonRel() {
      return lonRel_;
    }

    private void initFields() {
      id_ = 0L;
      latBase_ = 0;
      lonBase_ = 0;
      latRel_ = 0;
      lonRel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLatBase()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLonBase()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLatRel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLonRel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(10, latRel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(11, lonRel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(12, latBase_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(13, lonBase_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, latRel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, lonRel_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, latBase_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, lonBase_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static OsmLight.SimpleNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OsmLight.SimpleNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OsmLight.SimpleNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OsmLight.SimpleNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OsmLight.SimpleNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static OsmLight.SimpleNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static OsmLight.SimpleNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static OsmLight.SimpleNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static OsmLight.SimpleNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static OsmLight.SimpleNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(OsmLight.SimpleNode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SimpleNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SimpleNode)
        OsmLight.SimpleNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OsmLight.internal_static_SimpleNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OsmLight.internal_static_SimpleNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OsmLight.SimpleNode.class, OsmLight.SimpleNode.Builder.class);
      }

      // Construct using OsmLight.SimpleNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        latBase_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lonBase_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        latRel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        lonRel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OsmLight.internal_static_SimpleNode_descriptor;
      }

      public OsmLight.SimpleNode getDefaultInstanceForType() {
        return OsmLight.SimpleNode.getDefaultInstance();
      }

      public OsmLight.SimpleNode build() {
        OsmLight.SimpleNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public OsmLight.SimpleNode buildPartial() {
        OsmLight.SimpleNode result = new OsmLight.SimpleNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.latBase_ = latBase_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lonBase_ = lonBase_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.latRel_ = latRel_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lonRel_ = lonRel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OsmLight.SimpleNode) {
          return mergeFrom((OsmLight.SimpleNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OsmLight.SimpleNode other) {
        if (other == OsmLight.SimpleNode.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLatBase()) {
          setLatBase(other.getLatBase());
        }
        if (other.hasLonBase()) {
          setLonBase(other.getLonBase());
        }
        if (other.hasLatRel()) {
          setLatRel(other.getLatRel());
        }
        if (other.hasLonRel()) {
          setLonRel(other.getLonRel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasLatBase()) {
          
          return false;
        }
        if (!hasLonBase()) {
          
          return false;
        }
        if (!hasLatRel()) {
          
          return false;
        }
        if (!hasLonRel()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OsmLight.SimpleNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OsmLight.SimpleNode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>required int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private int latBase_ ;
      /**
       * <code>required uint32 latBase = 12;</code>
       */
      public boolean hasLatBase() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 latBase = 12;</code>
       */
      public int getLatBase() {
        return latBase_;
      }
      /**
       * <code>required uint32 latBase = 12;</code>
       */
      public Builder setLatBase(int value) {
        bitField0_ |= 0x00000002;
        latBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 latBase = 12;</code>
       */
      public Builder clearLatBase() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latBase_ = 0;
        onChanged();
        return this;
      }

      private int lonBase_ ;
      /**
       * <code>required uint32 lonBase = 13;</code>
       */
      public boolean hasLonBase() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 lonBase = 13;</code>
       */
      public int getLonBase() {
        return lonBase_;
      }
      /**
       * <code>required uint32 lonBase = 13;</code>
       */
      public Builder setLonBase(int value) {
        bitField0_ |= 0x00000004;
        lonBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 lonBase = 13;</code>
       */
      public Builder clearLonBase() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lonBase_ = 0;
        onChanged();
        return this;
      }

      private int latRel_ ;
      /**
       * <code>required uint32 latRel = 10;</code>
       */
      public boolean hasLatRel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 latRel = 10;</code>
       */
      public int getLatRel() {
        return latRel_;
      }
      /**
       * <code>required uint32 latRel = 10;</code>
       */
      public Builder setLatRel(int value) {
        bitField0_ |= 0x00000008;
        latRel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 latRel = 10;</code>
       */
      public Builder clearLatRel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        latRel_ = 0;
        onChanged();
        return this;
      }

      private int lonRel_ ;
      /**
       * <code>required uint32 lonRel = 11;</code>
       */
      public boolean hasLonRel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 lonRel = 11;</code>
       */
      public int getLonRel() {
        return lonRel_;
      }
      /**
       * <code>required uint32 lonRel = 11;</code>
       */
      public Builder setLonRel(int value) {
        bitField0_ |= 0x00000010;
        lonRel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 lonRel = 11;</code>
       */
      public Builder clearLonRel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lonRel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SimpleNode)
    }

    static {
      defaultInstance = new SimpleNode(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SimpleNode)
  }

  public interface SimpleWayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SimpleWay)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     */
    long getId();

    /**
     * <code>repeated int64 node = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getNodeList();
    /**
     * <code>repeated int64 node = 2 [packed = true];</code>
     */
    int getNodeCount();
    /**
     * <code>repeated int64 node = 2 [packed = true];</code>
     */
    long getNode(int index);
  }
  /**
   * Protobuf type {@code SimpleWay}
   */
  public static final class SimpleWay extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SimpleWay)
      SimpleWayOrBuilder {
    // Use SimpleWay.newBuilder() to construct.
    private SimpleWay(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SimpleWay(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SimpleWay defaultInstance;
    public static SimpleWay getDefaultInstance() {
      return defaultInstance;
    }

    public SimpleWay getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleWay(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                node_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              node_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                node_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                node_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          node_ = java.util.Collections.unmodifiableList(node_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OsmLight.internal_static_SimpleWay_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OsmLight.internal_static_SimpleWay_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OsmLight.SimpleWay.class, OsmLight.SimpleWay.Builder.class);
    }

    public static com.google.protobuf.Parser<SimpleWay> PARSER =
        new com.google.protobuf.AbstractParser<SimpleWay>() {
      public SimpleWay parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleWay(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleWay> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int NODE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> node_;
    /**
     * <code>repeated int64 node = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getNodeList() {
      return node_;
    }
    /**
     * <code>repeated int64 node = 2 [packed = true];</code>
     */
    public int getNodeCount() {
      return node_.size();
    }
    /**
     * <code>repeated int64 node = 2 [packed = true];</code>
     */
    public long getNode(int index) {
      return node_.get(index);
    }
    private int nodeMemoizedSerializedSize = -1;

    private void initFields() {
      id_ = 0L;
      node_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (getNodeList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(nodeMemoizedSerializedSize);
      }
      for (int i = 0; i < node_.size(); i++) {
        output.writeInt64NoTag(node_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < node_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(node_.get(i));
        }
        size += dataSize;
        if (!getNodeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        nodeMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static OsmLight.SimpleWay parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OsmLight.SimpleWay parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OsmLight.SimpleWay parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OsmLight.SimpleWay parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OsmLight.SimpleWay parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static OsmLight.SimpleWay parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static OsmLight.SimpleWay parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static OsmLight.SimpleWay parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static OsmLight.SimpleWay parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static OsmLight.SimpleWay parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(OsmLight.SimpleWay prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SimpleWay}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SimpleWay)
        OsmLight.SimpleWayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OsmLight.internal_static_SimpleWay_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OsmLight.internal_static_SimpleWay_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OsmLight.SimpleWay.class, OsmLight.SimpleWay.Builder.class);
      }

      // Construct using OsmLight.SimpleWay.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        node_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OsmLight.internal_static_SimpleWay_descriptor;
      }

      public OsmLight.SimpleWay getDefaultInstanceForType() {
        return OsmLight.SimpleWay.getDefaultInstance();
      }

      public OsmLight.SimpleWay build() {
        OsmLight.SimpleWay result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public OsmLight.SimpleWay buildPartial() {
        OsmLight.SimpleWay result = new OsmLight.SimpleWay(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          node_ = java.util.Collections.unmodifiableList(node_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.node_ = node_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OsmLight.SimpleWay) {
          return mergeFrom((OsmLight.SimpleWay)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OsmLight.SimpleWay other) {
        if (other == OsmLight.SimpleWay.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.node_.isEmpty()) {
          if (node_.isEmpty()) {
            node_ = other.node_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNodeIsMutable();
            node_.addAll(other.node_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OsmLight.SimpleWay parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OsmLight.SimpleWay) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>required int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> node_ = java.util.Collections.emptyList();
      private void ensureNodeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          node_ = new java.util.ArrayList<java.lang.Long>(node_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 node = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getNodeList() {
        return java.util.Collections.unmodifiableList(node_);
      }
      /**
       * <code>repeated int64 node = 2 [packed = true];</code>
       */
      public int getNodeCount() {
        return node_.size();
      }
      /**
       * <code>repeated int64 node = 2 [packed = true];</code>
       */
      public long getNode(int index) {
        return node_.get(index);
      }
      /**
       * <code>repeated int64 node = 2 [packed = true];</code>
       */
      public Builder setNode(
          int index, long value) {
        ensureNodeIsMutable();
        node_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 node = 2 [packed = true];</code>
       */
      public Builder addNode(long value) {
        ensureNodeIsMutable();
        node_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 node = 2 [packed = true];</code>
       */
      public Builder addAllNode(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureNodeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, node_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 node = 2 [packed = true];</code>
       */
      public Builder clearNode() {
        node_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SimpleWay)
    }

    static {
      defaultInstance = new SimpleWay(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SimpleWay)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SimpleNode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SimpleNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SimpleWay_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SimpleWay_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016osmLight.proto\"Z\n\nSimpleNode\022\n\n\002id\030\001 \002" +
      "(\003\022\017\n\007latBase\030\014 \002(\r\022\017\n\007lonBase\030\r \002(\r\022\016\n\006" +
      "latRel\030\n \002(\r\022\016\n\006lonRel\030\013 \002(\r\")\n\tSimpleWa" +
      "y\022\n\n\002id\030\001 \002(\003\022\020\n\004node\030\002 \003(\003B\002\020\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SimpleNode_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SimpleNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SimpleNode_descriptor,
        new java.lang.String[] { "Id", "LatBase", "LonBase", "LatRel", "LonRel", });
    internal_static_SimpleWay_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SimpleWay_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SimpleWay_descriptor,
        new java.lang.String[] { "Id", "Node", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
